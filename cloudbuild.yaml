steps:
  # Build and deploy backend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/footybets-backend', './backend']
    dir: '.'
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/footybets-backend']
  
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'footybets-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/footybets-backend'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '1Gi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '10'
      - '--set-env-vars'
      - 'DATABASE_URL=postgresql://footybets_user:footybets_password@/footybets-ai:us-central1:footybets-db/footybets'
      - '--set-env-vars'
      - 'GEMINI_API_KEY=${_GEMINI_API_KEY}'
      - '--set-env-vars'
      - 'ENVIRONMENT=production'

  # Build and deploy frontend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-t', 'gcr.io/$PROJECT_ID/footybets-frontend', './frontend']
    dir: '.'
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/footybets-frontend']
  
  - name: 'gcr.io/google.com/cloudsdktool/cloud-sdk'
    entrypoint: gcloud
    args:
      - 'run'
      - 'deploy'
      - 'footybets-frontend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/footybets-frontend'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--port'
      - '8080'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '5'
      - '--set-env-vars'
      - 'REACT_APP_API_URL=https://footybets-backend-818397187963.us-central1.run.app'

  # Update Cloud Storage with Brownlow content
  - name: 'gcr.io/cloud-builders/gsutil'
    args: ['-m', 'cp', '-r', './backend/brownlow_web_content/*', 'gs://footybets-ai-static/brownlow-medal-predictions/']

substitutions:
  _GEMINI_API_KEY: 'your-gemini-api-key-here'  # Set this in Cloud Build triggers

options:
  logging: CLOUD_LOGGING_ONLY
  machineType: 'E2_HIGHCPU_8'

timeout: '1200s' 